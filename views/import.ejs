<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Import Messages - MoMo Data Analysis Dashboard</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/css/style.css">
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-dark">
        <div class="container">
            <a class="navbar-brand" href="/">MoMo Data Analysis Dashboard</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav">
                    <li class="nav-item">
                        <a class="nav-link" href="/">Dashboard</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link active" href="/import">Import Messages</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <div class="container mt-4">
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <h5 class="card-title mb-0">Import Messages</h5>
                    </div>
                    <div class="card-body">
                        <form id="importForm" enctype="multipart/form-data">
                            <div class="mb-3">
                                <label for="xmlFile" class="form-label">Select XML File</label>
                                <input type="file" class="form-control" id="xmlFile" name="file" accept=".xml" required>
                                <div class="form-text">Select an XML file containing SMS messages to import.</div>
                            </div>
                            <button type="submit" class="btn btn-primary" id="importButton">
                                <span class="spinner-border spinner-border-sm d-none" role="status" aria-hidden="true"></span>
                                Import Messages
                            </button>
                        </form>

                        <div id="importResult" class="mt-4 d-none">
                            <div class="alert" role="alert">
                                <h5 class="alert-heading">Import Results</h5>
                                <p id="resultMessage"></p>
                                <hr>
                                <div class="row">
                                    <div class="col-md-4">
                                        <p class="mb-0"><strong>Records Imported:</strong> <span id="recordsImported">0</span></p>
                                    </div>
                                    <div class="col-md-4">
                                        <p class="mb-0"><strong>Failed Records:</strong> <span id="failedRecords">0</span></p>
                                    </div>
                                    <div class="col-md-4">
                                        <p class="mb-0"><strong>Status:</strong> <span id="importStatus">-</span></p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.getElementById('importForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            
            const form = e.target;
            const fileInput = document.getElementById('xmlFile');
            const importButton = document.getElementById('importButton');
            const spinner = importButton.querySelector('.spinner-border');
            const resultDiv = document.getElementById('importResult');
            
            if (!fileInput.files.length) {
                alert('Please select a file to import');
                return;
            }

            const formData = new FormData(form);
            
            try {
                // Show loading state
                importButton.disabled = true;
                spinner.classList.remove('d-none');
                
                const response = await fetch('/api/upload', {
                    method: 'POST',
                    body: formData
                });
                
                const result = await response.json();
                
                if (response.ok) {
                    // Show success
                    resultDiv.classList.remove('d-none');
                    resultDiv.querySelector('.alert').classList.remove('alert-danger');
                    resultDiv.querySelector('.alert').classList.add('alert-success');
                    document.getElementById('resultMessage').textContent = 'Messages imported successfully!';
                } else {
                    // Show error
                    resultDiv.classList.remove('d-none');
                    resultDiv.querySelector('.alert').classList.remove('alert-success');
                    resultDiv.querySelector('.alert').classList.add('alert-danger');
                    document.getElementById('resultMessage').textContent = result.error || 'Failed to import messages';
                }
                
                // Update result details
                document.getElementById('recordsImported').textContent = result.recordsImported || 0;
                document.getElementById('failedRecords').textContent = result.failedRecords || 0;
                document.getElementById('importStatus').textContent = result.status || 'Failed';
                
            } catch (error) {
                // Show error
                resultDiv.classList.remove('d-none');
                resultDiv.querySelector('.alert').classList.remove('alert-success');
                resultDiv.querySelector('.alert').classList.add('alert-danger');
                document.getElementById('resultMessage').textContent = 'An error occurred while importing messages';
            } finally {
                // Reset button state
                importButton.disabled = false;
                spinner.classList.add('d-none');
            }
        });
    </script>
</body>
</html> 